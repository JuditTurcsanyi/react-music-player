{"version":3,"sources":["components/Song.js","components/Player.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","className","alt","name","src","cover","artist","Player","activeLibraryHandler","shuffleHandler","shuffleStatus","setShuffleStatus","audioRef","setSongs","setCurrentSong","isPlaying","setIsPlaying","setSongInfo","songInfo","songs","currentIndex","findIndex","song","id","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","length","current","play","trackAnim","transform","animationPercentage","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","faRandom","load","faRedo","LibrarySong","songSelectHandler","newSongs","map","active","Library","libraryStatus","Nav","setLibraryStatus","darkMode","setDarkMode","faMusic","document","body","classList","remove","getElementById","Array","from","getElementsByClassName","forEach","lib","add","faMoon","faSun","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","animation","round","nextPrev","songEndHandler","randomIndex","random","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.46cd224f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Song = ({currentSong}) => {\r\n    return (\r\n        <div className=\"song-container\">\r\n            <img alt={currentSong.name} src={currentSong.cover}></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song;","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faPlay, faAngleLeft, faAngleRight, faPause, faRandom, faRedo} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Player = ({ activeLibraryHandler, shuffleHandler, shuffleStatus, setShuffleStatus, setSongs, audioRef, currentSong, setCurrentSong, isPlaying, setIsPlaying, setSongInfo, songInfo, songs }) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    \r\n    const playSongHandler = () => {\r\n        if(isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n    \r\n    const getTime = (time) => {\r\n        return(\r\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time%60)).slice(-2)\r\n        )\r\n    }\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime=e.target.value;\r\n        setSongInfo({...songInfo, currentTime: e.target.value})\r\n    }\r\n    const skipTrackHandler = async (direction) => {\r\n        \r\n        if(direction === \"skip-forward\") {\r\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n        }\r\n        if(direction === \"skip-back\") {\r\n            if ((currentIndex - 1) % songs.length === -1) {\r\n                await setCurrentSong(songs[songs.length - 1]);\r\n                activeLibraryHandler(songs[songs.length - 1]);\r\n                if (isPlaying) audioRef.current.play();\r\n            } else {\r\n            await setCurrentSong(songs[(currentIndex - 1)]);\r\n            activeLibraryHandler(songs[(currentIndex - 1)]);\r\n            }\r\n        }\r\n        \r\n        if (isPlaying) audioRef.current.play();\r\n    };\r\n\r\n    const replay = () => {\r\n        audioRef.current.load();\r\n        audioRef.current.play();\r\n        setIsPlaying(true);\r\n    }\r\n\r\n    const shuffle = () => {\r\n        setShuffleStatus(!shuffleStatus);\r\n    }\r\n\r\n\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`}} className=\"track\">\r\n                    <input min={0} max={songInfo ? songInfo.duration : \"0:00\"} value={songInfo.currentTime} onChange={dragHandler} type=\"range\"/>\r\n                <div style={trackAnim} className=\"animate-track\"></div>\r\n                </div>\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\r\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay} />\r\n                <FontAwesomeIcon onClick={shuffleStatus ? shuffleHandler : () => skipTrackHandler('skip-forward')} className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\r\n            </div>\r\n            <div className=\"new-play-control\">\r\n                <FontAwesomeIcon onClick={() => shuffle()} icon={faRandom} size=\"2x\" color={shuffleStatus ? \"rgb(236, 0, 110)\" : \"\"} />\r\n                <FontAwesomeIcon onClick={() => replay()} icon={faRedo} size=\"2x\" />\r\n            </div>\r\n            {/* Lifted up */}\r\n            {/* <audio onTimeUpdate={timeUpdateHandler} onLoadedMetadata={timeUpdateHandler} ref={audioRef} src={currentSong.audio}></audio> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","import React from \"react\";\r\n\r\n\r\nconst LibrarySong = ({song, songs, setCurrentSong, id, audioRef, isPlaying, setSongs}) => {\r\n    const songSelectHandler = async () => {\r\n        // const selectedSong = songs.filter((state) => state.id === id);\r\n        // setCurrentSong(selectedSong[0]);\r\n        await setCurrentSong(song);\r\n        const newSongs = songs.map((song) => {\r\n            if(song.id === id) {\r\n                song.active = true;\r\n             } else {\r\n                song.active = false;\r\n            }\r\n            \r\n            return song;\r\n        });\r\n        setSongs(newSongs);\r\n        if (isPlaying) audioRef.current.play();\r\n    };\r\n    return (\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\r\n            <img alt={song.name} src={song.cover}></img>\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong;","import { library } from '@fortawesome/fontawesome-svg-core';\r\nimport React from 'react';\r\nimport LibrarySong from './LibrarySong'\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\r\n    return(\r\n        <div id=\"library-section\" className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map(song => <LibrarySong songs={songs} setCurrentSong={setCurrentSong} song={song} id={song.id} key={song.id} audioRef={audioRef} isPlaying={isPlaying} setSongs={setSongs} /> )}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library;","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMusic, faMoon, faSun} from \"@fortawesome/free-solid-svg-icons\";\r\n// import { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus, darkMode, setDarkMode}) => {\r\n    const addDarkMode = () => {\r\n        setDarkMode(!darkMode);\r\n        if (!darkMode) {\r\n            document.body.classList.add(\"dark-mode\");\r\n            document.getElementById('library-section').classList.add(\"dark-mode\");\r\n            Array.from(document.getElementsByClassName('active-library')).forEach(lib => lib.classList.add(\"dark-mode\"));\r\n  \r\n        } else {\r\n            document.body.classList.remove(\"dark-mode\");\r\n            document.getElementById('library-section').classList.remove(\"dark-mode\");\r\n            Array.from(document.getElementsByClassName('active-library')).forEach(lib => lib.classList.remove(\"dark-mode\"));\r\n        }\r\n    }\r\n    return(\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <div className=\"buttons\">\r\n                <button onClick={() => setLibraryStatus(!libraryStatus)} >\r\n                    Library\r\n                    <FontAwesomeIcon icon={faMusic} />\r\n                </button>\r\n                <button onClick={() => addDarkMode()}>\r\n                    <FontAwesomeIcon  icon={darkMode ? faMoon : faSun} />\r\n                </button>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import { v4 as uuidv4 } from \"uuid\";\n\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Calm\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/06/d9d8ae69141cb7838e3c53bbf393c6218285e384-1024x1024.jpg\",\n      artist: \"ØDYSSEE, Florent Garcia\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9285\",\n      color: [\"#06004D\", \"#8093FF\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;\n","import React, {useState, useRef} from \"react\";\nimport \"./styles/app.scss\";\nimport Song from './components/Song';\nimport Player from './components/Player';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\nimport data from \"./data\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\nfunction App() {\n  const audioRef = useRef(null);\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const [shuffleStatus, setShuffleStatus] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n\n  const timeUpdateHandler = (e) => {\n  const current = e.target.currentTime;\n  const duration = e.target.duration;\n  const roundedCurrent = Math.round(current);\n  const roundedDuration = Math.round(duration);\n  const animation = ((roundedCurrent / roundedDuration)*100);\n  setSongInfo({...songInfo, currentTime: current, duration: duration, animationPercentage: animation})\n}\n\nlet currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\nconst activeLibraryHandler = (nextPrev) => {\n  const newSongs = songs.map((song) => {\n      if(song.id === nextPrev.id) {\n          song.active = true;\n      } else {\n          song.active = false;\n      }\n      \n      return song;\n  });\n  setSongs(newSongs);\n}\nconst songEndHandler = async () => {\n  \n        await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n        activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\n        if (isPlaying) audioRef.current.play();\n  }\n\n  const shuffleHandler = async () => {\n    let randomIndex = Math.floor(Math.random() * songs.length);\n    while (randomIndex === currentIndex) {\n      randomIndex = Math.floor(Math.random() * songs.length);\n    } \n    await setCurrentSong(songs[randomIndex]);\n    activeLibraryHandler(songs[randomIndex]);\n    audioRef.current.play();\n}\n\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : \"\"}`}>\n      <Nav darkMode={darkMode} setDarkMode={setDarkMode} libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player activeLibraryHandler={activeLibraryHandler} shuffleHandler={shuffleHandler} setSongs={setSongs} songs={songs} audioRef={audioRef} setIsPlaying={setIsPlaying} isPlaying={isPlaying} currentSong={currentSong} setCurrentSong={setCurrentSong} setSongInfo={setSongInfo} songInfo={songInfo} shuffleStatus={shuffleStatus} setShuffleStatus={setShuffleStatus} />\n      <Library isPlaying={isPlaying} libraryStatus={libraryStatus} audioRef={audioRef} songs={songs} setCurrentSong={setCurrentSong}  setSongs={setSongs} />\n      <audio onTimeUpdate={timeUpdateHandler} onLoadedMetadata={timeUpdateHandler} ref={audioRef} src={currentSong.audio} onEnded={shuffleStatus ? shuffleHandler : songEndHandler}></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}